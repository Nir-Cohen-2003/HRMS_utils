[workspace]
channels = [
  "https://prefix.dev/pixi-build-backends",
  "https://prefix.dev/conda-forge",
]
platforms = ["linux-64","win-64"]
preview = ["pixi-build"]
[package]
name = "hrms_utils"
version = "0.3.0"

[dependencies]
python = "3.12.*"
pip = "*"
cython = ">=3.0.0"
setuptools = ">=68.0.0"
numpy = ">=1.20.0"
rdkit = ">=2024.0.0"
twine = "*"
cibuildwheel = "*"
[pypi-dependencies]
build = "*"

[tasks]
build-wheel = "python -m build"
build-all = "python -m build --wheel --sdist"
publish-test = {cmd="twine upload --repository testpypi --skip-existing dist/*", depends-on = ["cibw-wheels"]}
cibw-wheels = { cmd = "python -m cibuildwheel --output-dir dist", env = {CIBW_BUILD = "cp312-* cp313-*", CIBW_SKIP = "*musllinux* *-win32", CIBW_ARCHS_WINDOWS = "AMD64"}, depends-on=["clean_dist"]}
clean_dist = "rm -rf dist || true"
sdist = "python -m build --sdist"
build-wheel-win = { cmd = "python -m build --wheel --no-isolation"}
build-all-win   = { cmd = "python -m build --wheel --sdist --no-isolation"}

[environments]
default = {features = [], solve-group = "default"}
testing = {features = ["testing"], solve-group = "testing"}



[package.build]
backend = { name = "pixi-build-python", version = ">=0.1.0",channels = [
  "https://prefix.dev/pixi-build-backends",
  "https://prefix.dev/conda-forge",
]}
[package.build.config]
# platforms = ["linux-64","win-64"]
noarch = false
# script = "python -m pip install . -vv --no-deps --no-build-isolation"

[package.build-dependencies]
python = "3.12.*"
pip = "*"
numpy = ">=1.20.0,<2.3"
setuptools = ">=68.0.0"
cython = ">=3.0.0"
cxx-compiler = "*"
pyarrow = ">=12.0.0" # might not be needed, but i do call it in the cython code

[package.host-dependencies] 
python = "3.12.*"
pip = "*"
numpy = ">=1.20.0"
setuptools = ">=68.0.0"
cython = ">=3.0.0"
cxx-compiler = "*"

[package.run-dependencies]
polars = ">=1.32.0,<2"
rdkit = ">=2024.0.0"
numpy = ">=1.20.0"
numba = ">=0.61.0"
ms_entropy = "*"
scipy = "*"
requests = "*"
aiohttp = "*"
# for polars
pyarrow = "*"
pandas = "*"
python-calamine = "*"
openpyxl = "*"
xlsx2csv = "*"
xlsxwriter = "*"
connectorx = "*"
sqlalchemy = "*"


[feature.testing.tasks]
# runtest = '''
# python -c "import sys,os; p=sys.argv[1]; p=os.path.relpath(p,os.getcwd()); p=p[p.find('src/')+4:] if 'src/' in p else p; p=p[:-3] if p.endswith('.py') else p; p=p.replace('/', '.'); import runpy; runpy.run_module(p, run_name='__main__')"
# '''
mass_decomp = "python tests/formula_annotation/mass_decomposition.py"
chromatogram = "python tests/formula_annotation/chromatogram.py"
[feature.testing.dependencies]
hrms_utils = {path = "."}
polars = ">=1.32.0,<2"
rdkit = ">=2024.0.0"
numpy = ">=1.20.0,<2.3"
numba = ">=0.61.0"
ms_entropy = "*"
scipy = "*"
requests = "*"
aiohttp = "*"
pyarrow = ">=12.0.0"
pandas = "*"
python-calamine = "*"
openpyxl = "*"
xlsx2csv = "*"
xlsxwriter = "*"
connectorx = "*"
sqlalchemy = "*"
ipykernel = "*"
[feature.testing.pypi-dependencies]
# hrms_utils = {path = "dist/hrms_utils-0.1.0.post1-cp312-cp312-win_amd64.whl",editable = false}


