name: Build Package

on:
  push:
    branches: [ main ]
  release:
    types: [ created ]
  workflow_dispatch:

jobs:
  wheels:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install pixi (Linux)
        if: runner.os == 'Linux'
        run: |
          curl -fsSL https://pixi.sh/install.sh | bash
          echo "$HOME/.pixi/bin" >> $GITHUB_PATH

      - name: Install pixi (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
            irm https://pixi.sh/install.ps1 | iex
            echo "$HOME\.pixi\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Ensure Docker (Linux)
        if: runner.os == 'Linux'
        run: |
          if ! command -v docker >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y docker.io
          fi
          # Start docker if not already running
          (sudo systemctl start docker 2>/dev/null || sudo service docker start 2>/dev/null || true)
          docker --version
          docker info || true

      - name: Show pixi version
        run: pixi --version

      - name: Build wheels with cibuildwheel
        run: pixi run cibw-wheels

      - name: Build sdist (only on Linux)
        if: runner.os == 'Linux'
        run: pixi run sdist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}
          path: dist/

  publish-testpypi:
    needs: wheels
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    # Trusted Publishing environment registered in TestPyPI
    environment: build package
    permissions:
      id-token: write   # Mandatory for OIDC / Trusted Publishing
      contents: read
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: dist-*
          merge-multiple: true

      - name: List collected files
        run: ls -l dist

      - name: Install twine (for validation only)
        run: python -m pip install -U twine

      - name: Verify distributions
        run: twine check dist/*

      - name: Publish package distributions to TestPyPI (Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/